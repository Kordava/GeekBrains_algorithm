"""
9. Среди натуральных чисел, которые были введены, найти
наибольшее по сумме цифр. Вывести на экран это число и сумму его цифр.

Пример:
Введите количество чисел: 2
Введите число: 23
Введите число: 2
Наибольшее число по сумме цифр: 23, сумма его цифр: 5
"""
# из собственной библиотеки подключаю функцию контроля ввода числа
# функцию использовал в предыдущих работах, не буду загромождать
from lib import input_nbr
# тут два вложенных адгоритма, делаем двойную рекурсию
# вложенная рекурсия, получает число и считает сумму его чисел


def recursion2(numbrs, sum_tmp=0):
    """Рекурсивное решение функции"""
    # Базовый случай
    # Последний шаг рекурсии
    # достигли последней цифры числа
    if numbrs == 0:
        return sum_tmp
    # Шаг рекурсии / рекурсивное условие
    # считаем сумму элементов
    # выделяем делением последнюю цифру числа и прибавляем в сумму
    sum_tmp += numbrs % 10
    # отбрасываем последнюю цифру числа
    numbrs = numbrs // 10
    return recursion2(numbrs, sum_tmp)
# главная рекурсия, обеспечивает получение заданного количество чисел и
# передает из на подсчет


def recursion(qnt, max_num=0, max_sum=0, i=1):
    """Рекурсивное решение функции"""
    # Базовый случай
    # Последний шаг рекурсии
    # достигли последнего числа
    if i == qnt + 1:
        print(
            f"Наибольшее число по сумме цифр: {max_num}, сумма его цифр: {max_sum}")
        return

    # Шаг рекурсии / рекурсивное условие
    # считаем сумму элементов
    # пользователь вводит числа

    numbrs = int(input(f"Число {str(i)}: "))
    # второй рекурсией считаем сумму цифр данного числа
    sum_tmp = recursion2(numbrs)
    # сравниваем с максимальной суммой
    if sum_tmp > max_sum:
        max_sum = sum_tmp
        max_num = numbrs
    i += 1
    recursion(qnt, max_num, max_sum, i)

# код основной программы из задания


# пользователь вводит данные
QNT = input_nbr(
    'int',
    '> Сколько будет чисел? ',
    lambda a: a > 0)

recursion(QNT)
